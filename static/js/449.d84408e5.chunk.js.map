{"version":3,"file":"static/js/449.d84408e5.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\r\nimport {\r\n  Button, Card, Badge, Col,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst styles = {\r\n  imageStyle: {\r\n    height: 150,\r\n  },\r\n  badgeStyle: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 2,\r\n    paddingBottom: 2,\r\n    margin: 5,\r\n  },\r\n  cardStyle: {\r\n    borderRadius: 10,\r\n  },\r\n  cardTitleStyle: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  },\r\n  cardTextStyle: {\r\n    textAlign: 'left',\r\n  },\r\n  linkStyle: {\r\n    textDecoration: 'none',\r\n    padding: 10,\r\n  },\r\n  buttonStyle: {\r\n    margin: 5,\r\n  },\r\n};\r\n\r\nconst ProjectCard = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\r\n\r\n  const { project } = props;\r\n\r\n  return (\r\n    <Col>\r\n      <Card\r\n        style={{\r\n          ...styles.cardStyle,\r\n          backgroundColor: theme.cardBackground,\r\n          borderColor: theme.cardBorderColor,\r\n        }}\r\n        text={theme.bsSecondaryVariant}\r\n      >\r\n        <Card.Img variant=\"top\" src={project?.image} style={styles.imageStyle} />\r\n        <Card.Body>\r\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\r\n          <Card.Text style={styles.cardTextStyle}>\r\n            {parseBodyText(project.bodyText)}\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        <Card.Body>\r\n          {project?.links?.map((link) => (\r\n            <Button\r\n              key={link.href}\r\n              style={styles.buttonStyle}\r\n              variant={'outline-' + theme.bsSecondaryVariant}\r\n              onClick={() => window.open(link.href, '_blank')}\r\n            >\r\n              {link.text}\r\n            </Button>\r\n          ))}\r\n        </Card.Body>\r\n        {project.tags && (\r\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\r\n            {project.tags.map((tag) => (\r\n              <Badge\r\n                key={tag}\r\n                pill\r\n                bg={theme.bsSecondaryVariant}\r\n                text={theme.bsPrimaryVariant}\r\n                style={styles.badgeStyle}\r\n              >\r\n                {tag}\r\n              </Badge>\r\n            ))}\r\n          </Card.Footer>\r\n        )}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n  project: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    bodyText: PropTypes.string.isRequired,\r\n    image: PropTypes.string,\r\n    links: PropTypes.arrayOf(PropTypes.shape({\r\n      text: PropTypes.string.isRequired,\r\n      href: PropTypes.string.isRequired,\r\n    })),\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProjectCard;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["CardBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Badge","pill","styles","imageStyle","height","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","_project$links","theme","useContext","ThemeContext","project","Col","_jsxs","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","title","bodyText","ReactMarkdown","links","map","link","Button","onClick","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant","size","active","disabled","buttonProps","tagName","useButtonProps","colProps","spans","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length"],"sourceRoot":""}