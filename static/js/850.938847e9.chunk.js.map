{"version":3,"file":"static/js/850.938847e9.chunk.js","mappings":"gQAeA,MAAMA,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KAoFlB,QAhFA,SAAoBK,GAClB,MAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,KACnB,OAAEC,GAAWJ,GACZK,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAWjC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAMC,EAAAA,EAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQR,EAAQQ,EAAIH,eAC1BK,OAAOC,GAAQA,GAAI,GACrB,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CAACC,MAAOnB,IAEdC,GAEGgB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BAA2BJ,UACxCC,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAAAL,UACRC,EAAAA,EAAAA,KAACK,EAAAA,iBAAgB,CACfC,UAAW1B,EAAM2B,kBAAkBR,SAElCf,EAAKwB,KAAKC,IACTT,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAAAX,UACHF,EAAAA,EAAAA,MAACc,EAAAA,wBAAuB,CACxBR,UAAU,kCAERS,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAYlC,EAAMmC,aACpCC,MAAOhD,EAAOU,UACduC,mBAAoB,CAAEC,MAAOtC,EAAMsC,OAAQnB,SAAA,EAE3CC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYJ,SACvBU,EAAKP,SAERL,EAAAA,EAAAA,MAAA,OAAKmB,MAAOhD,EAAOI,uBAAuB2B,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIgB,MAAO,IAAKhD,EAAOO,cAAe2C,MAAOtC,EAAMmC,aAAchB,SAC9DU,EAAKU,WAEPV,EAAKW,WACNvB,EAAAA,EAAAA,MAAA,MAAImB,MAAO,IAAIhD,EAAOO,cAAe2C,MAAOtC,EAAMmC,aAAchB,SAAA,CAAC,WAE9D,IACAU,EAAKW,gBAIVpB,EAAAA,EAAAA,KAAA,MAAIgB,MAAO,IAAIhD,EAAOC,QAASiD,MAAOtC,EAAMmC,aAAahB,SACtDU,EAAKY,gBAAgBb,KAAKc,IACzBzB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACuB,EAAAA,EAAa,CACZxB,SAAUuB,EACVE,WAAY,CACVC,EAAG,aAITzB,EAAAA,EAAAA,KAAA,WATQsB,SAvBTb,EAAKP,MAAQO,EAAKG,qBA0CjCZ,EAAAA,EAAAA,KAAC0B,EAAAA,QAAe,MAG5B,C,4EChGA,QATA,SAAgB/C,GACd,MAAM,MAAEuB,GAAUvB,EAClB,OAAOqB,EAAAA,EAAAA,KAAA,MAAIgB,MAAO,CAACW,UAAU,OAAQxB,UAAU,SAAQJ,SAAEG,GAC3D,C","sources":["components/Experience.jsx","components/Header.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\n\r\n\r\nimport { Container } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeContext } from 'styled-components';\r\nimport {Fade,Slide} from 'react-awesome-reveal';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\nimport '../css/experience.css';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\n\r\nconst styles = {\r\n  ulStyle: {\r\n    listStylePosition: 'outside',\r\n    paddingLeft: 20,\r\n  },\r\n  subtitleContainerStyle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  subtitleStyle: {\r\n    display: 'inline-block',\r\n  },\r\n  inlineChild: {\r\n    display: 'inline-block',\r\n  },\r\n  itemStyle: {\r\n    marginBottom: 10,\r\n  },\r\n};\r\n\r\nfunction Experience(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.experiences, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res.experiences))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              <VerticalTimeline\r\n                lineColor={theme.timelineLineColor}\r\n              >\r\n                {data.map((item) => (\r\n                  <Fade>\r\n                    <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                      key={item.title + item.dateText}\r\n                      dateText={item.dateText}\r\n                      dateInnerStyle={{ background: theme.accentColor }}\r\n                      style={styles.itemStyle}\r\n                      bodyContainerStyle={{ color: theme.color }}\r\n                    >\r\n                      <h2 className=\"item-title\">\r\n                        {item.title}\r\n                      </h2>\r\n                      <div style={styles.subtitleContainerStyle}>\r\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\r\n                          {item.subtitle}\r\n                        </h4>\r\n                        {item.workType && (\r\n                        <h5 style={{...styles.subtitleStyle, color: theme.accentColor }}>\r\n                    &nbsp;Â·\r\n                          {' '}\r\n                          {item.workType}\r\n                        </h5>\r\n                        )}\r\n                      </div>\r\n                      <ul style={{...styles.ulStyle, color: theme.accentColor}}>\r\n                        {item.workDescription.map((point) => (\r\n                          <div key={point}>\r\n                            <li>\r\n                              <ReactMarkdown\r\n                                children={point}\r\n                                components={{\r\n                                  p: 'span',\r\n                                }}\r\n                              />\r\n                            </li>\r\n                            <br />\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </VerticalTimelineElement>\r\n                  </Fade>\r\n                ))}\r\n              </VerticalTimeline>\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <h5 style={{margintop:'1px'}} className=\"header\">{title}</h5>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","props","theme","useContext","ThemeContext","header","data","setData","useState","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","children","_jsx","Header","title","className","Container","VerticalTimeline","lineColor","timelineLineColor","map","item","Fade","VerticalTimelineElement","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","ReactMarkdown","components","p","FallbackSpinner","margintop"],"sourceRoot":""}